
processor = {
  stop-property-filter = [
    "^rdf:type$"
  ]

  regex-filter = {
    s: null
    p: null
    o: null
  }

  entity-splitter = {}

  sink-duplicate = {}

  entity-classifier = {
    relations = [
      "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
      "rdf:type",
      "http://purl.org/dc/terms/subject",
      "dct:subject"
    ]
  }

  namespace = {
    dbr: "http://dbpedia.org/resource/"
    dbp: "http://dbpedia.org/property/"
    dbo: "http://dbpedia.org/ontology/"
    dbc: "http://dbpedia.org/resource/Category:"
    rdfs: "http://www.w3.org/2000/01/rdf-schema#"
    schema: "http://schema.org/"
    dct: "http://purl.org/dc/terms/"
  }

  wordnet = {
    wordnet-dir = /usr/share/wordnet
  }
}

stargraph.opennlp.models-dir = /usr/share/stargraph/opennlp

stargraph.syntatic-patterns.en = [

  { "same type as": OPERATION }
  { "JJR IN": OPERATION }
  { "^NNP NNP$": INSTANCE }

]

stargraph.planner-patterns.en = {

  "CLASS_1 INSTANCE_1": [
    "INSTANCE_1 CLASS_1 ?VAR_1"
  ]

}

stargraph = {
  data.root-dir = /usr/share/stargraph/data
  networking.rest-url = "http://localhost:8917"

  distributional-service.rest-url = "http://localhost:8916/relatedness"
  distributional-service.corpus = wiki-2014

  elastic.bulk.concurrency = 0 # means all CPUs available
  elastic.bulk.actions = 1000
  elastic.cluster-name = StarGraphV2Cluster
  elastic.servers = ["localhost:9300"]
  elastic.index.prefix-name = null

  #
  # These are the default supported indexed types.
  # New models should declare their own type or rely on the _default_ dynamic model.
  # As expected the key names are reserved for the built-in models.
  #
  elastic.mapping = {

    "_default_": {
      "dynamic_templates": [
        {
          "objects": {
            "match": "*",
            "match_mapping_type": "object",
            "mapping": {
              "type": "nested",
              "include_in_parent": true
            }
          }
        }
      ]
    }

    "entities": {
      "dynamic": "strict",
      "include_in_all": false,
      "properties": {
        "id": {
          "type": "keyword",
          "index": true
          "doc_values": false
        },
        "value": {
          "type": "text",
          "analyzer": "english",
          "doc_values": false
        },
        "otherValues": {
          "type": "text",
          "analyzer": "english",
          "doc_values": false
        }
      }
    }

    "relations": {
      "dynamic": "strict",
      "include_in_all": false,
      "properties": {
        "id": {
          "type": "keyword",
          "index": false,
          "doc_values": false
        },
        "value": {
          "type": "text",
          "analyzer": "english",
          "doc_values": false
        },
        "synonyms": {
          "type": "nested",
          "properties": {
            "posType": {
              "type": "keyword",
              "index": false,
              "doc_values": false
            },
            "word": {
              "type": "text",
              "analyzer": "english",
              "doc_values": false
            }
          }
        },
        "hyponyms": {
          "type": "nested",
          "properties": {
            "posType": {
              "type": "keyword",
              "index": false,
              "doc_values": false
            },
            "word": {
              "type": "text",
              "analyzer": "english",
              "doc_values": false
            }
          }
        },
        "hypernyms": {
          "type": "nested",
          "properties": {
            "posType": {
              "type": "keyword",
              "index": false,
              "doc_values": false
            },
            "word": {
              "type": "text",
              "analyzer": "english",
              "doc_values": false
            }
          }
        }
      }
    }

    "facts": {
      "dynamic": "strict",
      "include_in_all": false,
      "properties": {
        "s": {
          "type": "nested",
          "properties": {
            "id": {
              "type": "keyword",
              "index": true
              "doc_values": false
            },
            "value": {
              "type": "text",
              "analyzer": "english",
              "doc_values": false
            },
            "otherValues": {
              "type": "text",
              "analyzer": "english",
              "doc_values": false
            }
          }
        },
        "p": {
          "type": "nested",
          "properties": {
            "id": {
              "type": "keyword",
              "index": true,
              "doc_values": false
            },
            "value": {
              "type": "text",
              "analyzer": "english",
              "doc_values": false
            }
          }
        },
        "o": {
          "type": "nested",
          "properties": {
            "complex": {
              "type": "boolean",
              "index": true,
              "doc_values": false
            }
            "id": {
              "type": "keyword",
              "index": true,
              "doc_values": false
            },
            "value": {
              "type": "text",
              "analyzer": "english",
              "doc_values": false
            },
            "otherValues": {
              "type": "text",
              "analyzer": "english",
              "doc_values": false
            },
            "dataType": {
              "type": "keyword",
              "index": false,
              "doc_values": false
            },
            "language": {
              "type": "keyword",
              "index": false,
              "doc_values": false
            }
          }
        }
      }
    }
  }

  kb: null
  indexer.factory.class = net.stargraph.core.index.DefaultIndexerFactory
}