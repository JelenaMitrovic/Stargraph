
# Be aware.
# Used for the IT.
#
# Override via System properties if needed.
# Example: -Dstargraph.elastic.cluster-name=MyCluster.
# This configuration is merged during runtime with reference.conf.
#

stargraph = {

  elastic.cluster-name = StarGraphV2Cluster
  elastic.servers = ["localhost:9300"]

  kb.obama = {
    language = EN

    namespaces = {
      dbr: "http://dbpedia.org/resource/"
    }

    # Apply internal Namespace mappings (mostly from dbpedia)
    triple-store.namespace.mapping = default
    # Default is to load all in memory at once.
    triple-store.hdt.use-index = no

    #
    # The model.<name> defines a section for a custom type within
    # this KB. Below are only examples. You don't need to use
    # __facts__, __entities__ nor __relations__ to name your models.
    # These are reasonable names for a Fact Based dataset as DBpedia.
    #
    model.facts = {
      provider.class = net.stargraph.core.FactProviderFactory

      processors = [
        {
          entity-classifier: ${processor.entity-classifier}
        },
      ]

      elastic = ${stargraph.elastic}
    }

    model.entities = {
      provider.class = net.stargraph.core.EntityProviderFactory
      processors = [
        {
          sink-duplicate: ${processor.sink-duplicate}
        },
      ]
      elastic = ${stargraph.elastic}
    }

    model.relations = {
      provider.class = net.stargraph.core.PropertyProviderFactory

      processors = [
        {
          stop-property-filter: ${processor.stop-property-filter}
        },
        {
          sink-duplicate: ${processor.sink-duplicate}
        },
        {
          wordnet: ${processor.wordnet}
        },
      ]

      elastic = ${stargraph.elastic}
    }
  }

  kb.mytest = {
    language = EN

    model.mytype = {
      provider.class = net.stargraph.test.TestDataProviderFactory
      provider.args.data = [
        {text: "1st fail", failOnIndexer: true, failOnProvider: false},
        {text: "2nd fail", failOnIndexer: false, failOnProvider: true},
        {text: "first", failOnIndexer: false, failOnProvider: false},
        {text: "second", failOnIndexer: false, failOnProvider: false},
        {text: "third", failOnIndexer: false, failOnProvider: false},
      ]
      elastic = ${stargraph.elastic}
      verbose = yes
    }
  }

  kb.simple = {
    language = EN

    triple-store.namespace.mapping = default

    namespaces = {
      dbr: "http://dbpedia.org/resource/"
    }

    model.facts = {
      provider.class = net.stargraph.core.FactProviderFactory

      processors = [
        {
          regex-filter: ${processor.regex-filter}
          regex-filter.s = [
            "^http://dbpedia.org/example/File(.*)$"
          ]

          regex-filter.p = [
            "^foaf:thumbnail$",
            "^dbo:wikiPageID$"
          ]
        },
        {entity-classifier: ${processor.entity-classifier}},
      ]

      elastic = ${stargraph.elastic}
    }

    model.entities = {
      provider.class = net.stargraph.core.EntityProviderFactory
      processors = [
        {
          sink-duplicate: ${processor.sink-duplicate}
        },
      ]
      elastic = ${stargraph.elastic}
    }

  }
}